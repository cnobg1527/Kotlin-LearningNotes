1.Kotlin 中有四个可见性修改器
    private     如果标记声明，则该声明仅在包含声明的文件内可见
    protected   protected不适用于顶级声明，主要用于类中属性方法对其子类可见
    internal    如果标记它，则在同一模块中随处可见
    public      如果未指定任何可见性修改器，则默认情况下为   public
    例子：
    // file name: example.kt
    package foo

    private fun foo() { ... } // visible inside example.kt

    public var bar: Int = 5 // property is visible everywhere
        private set         // setter is visible only in example.kt

    internal val baz = 6    // visible inside the same module

2.类和接口
  对于在类中声明的成员：
  private       表示仅在此类中可见（包括其所有成员）;
  protected     在子类中可见相同;private
  internal•     本模块内看到声明类的任何客户端都看到其成员;internal
  public•   看到声明类的任何客户端看到其成员。public
  请注意，在 Kotlin 中，外部类看不到其内部类的私有成员。

3.构造器和函数
  若要指定类主构造函数的可见性，请使用以下语法（请注意，您需要添加显式构造函数关键字）：
  class C private constructor(a: Int) { ... }
  在这里，构造函数是私有的。默认情况下，所有构造函数都是 public

4.局部变量、函数和类不能具有可见性修改器。


